
import os

pandora_path = os.getenv('PANDORAPATH', '/usr/local/pandora')
grass64_path = os.getenv('GRASS64_PATH', '/usr/lib/grass64')

vars = Variables('custom.py')
vars.Add(BoolVariable('debug', 'compile with debug flags', 'no'))
vars.Add(BoolVariable('edebug', 'compile with extreme debug logs', 'no'))

env = Environment(variables=vars, ENV=os.environ, CXX='mpicxx')
Help(vars.GenerateHelpText(env))

sources = ['main.cxx', pandora_path + '/utils/MpiStubCode.cxx']

# Flags common to all environments:
env.Append(LINKFLAGS = '-fopenmp')
env.Append(CCFLAGS = ['-Wall', '-pedantic', '-std=c++0x' ])
env.Append(CPPPATH = ['.', pandora_path + '/include'])
env.Append(LIBPATH = [pandora_path + '/lib'])


# Environment-dependent flags:
if env['debug']:
    env.Append( CCFLAGS = ['-g', '-O0', '-DPANDORADEBUG'] )
    env.Append(LIBS = ['pandorad'])
else:
    env.Append( CCFLAGS = ['-O3'] )
    env.Append(LIBS = ['pandora'])
    

#env.Program('analysis', srcFiles, CPPPATH=includeDirs, LIBS=libs, LIBPATH=libDirs)
env.Program('analysis.bin', sources)


